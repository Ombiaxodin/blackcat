name: UAMI App Escalation (Two-Hop)
on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  escalate:
    runs-on: ubuntu-latest
    steps:
      - name: App token via GitHub OIDC (PowerShell)
        shell: pwsh
        env:
          APP_CLIENT_ID: ${{ secrets.APP_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        run: |
          # Step 1: Get GitHub OIDC ID token with audience api://AzureADTokenExchange
          $aud = [System.Uri]::EscapeDataString('api://AzureADTokenExchange')
          $oidcUrl = "$env:ACTIONS_ID_TOKEN_REQUEST_URL&audience=$aud"
          $gh = Invoke-RestMethod -Headers @{ Authorization = "Bearer $($env:ACTIONS_ID_TOKEN_REQUEST_TOKEN)" } -Uri $oidcUrl -Method GET
          $GitHubIdToken = $gh.value
          if(-not $GitHubIdToken){ throw 'Failed to obtain GitHub OIDC ID token' }

          # Step 2: Exchange GitHub OIDC token for App token (App FIC trusts GitHub OIDC)
          $kvp = @{
            client_id             = $env:APP_CLIENT_ID
            grant_type            = 'client_credentials'
            client_assertion_type = 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer'
            client_assertion      = $GitHubIdToken
            scope                 = 'https://graph.microsoft.com/.default'
          }
          $body = ($kvp.GetEnumerator() | ForEach-Object { '{0}={1}' -f [System.Uri]::EscapeDataString($_.Key), [System.Uri]::EscapeDataString([string]$_.Value) }) -join '&'
          $tokenResp = Invoke-RestMethod -Method Post -Uri "https://login.microsoftonline.com/$($env:AZURE_TENANT_ID)/oauth2/v2.0/token" -Headers @{ Accept = 'application/json' } -ContentType 'application/x-www-form-urlencoded' -Body $body
          $appToken = $tokenResp.access_token
          if(-not $appToken){ throw 'App token request failed' }
          Write-Host ("App token (first 30 chars): {0}" -f $appToken.Substring(0,30))

          Write-Host 'Graph: list 5 users (UPNs)'
          $users = Invoke-RestMethod -Headers @{Authorization = "Bearer $appToken"} -Uri 'https://graph.microsoft.com/v1.0/users?$top=5'
          $users.value.userPrincipalName | ForEach-Object { Write-Host "  $_" }

          Write-Host 'Done.'
