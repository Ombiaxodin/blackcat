name: uami-to-app-federation-demo

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  id-token: write     # required for GitHub OIDC
  contents: read

env:
  TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}          # <tenant GUID>
  SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  UAMI_CLIENT_ID: ${{ secrets.UAMI_CLIENT_ID }}# the UAMI's clientId (from the UAMI resource)
  APP_CLIENT_ID:  ${{ secrets.AZURE_APP_CLIENT_ID }} # the App Registration clientId (the one that trusts the UAMI)
  GRAPH_SCOPE: "https://graph.microsoft.com/.default"

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---- Hop 1: GitHub OIDC -> UAMI (via federated cred on the UAMI) ----
      # azure/login@v2 supports authenticating with a user-assigned managed identity
      - name: Azure login with UAMI (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ env.UAMI_CLIENT_ID }}
          tenant-id: ${{ env.TENANT_ID }}
          subscription-id: ${{ env.SUBSCRIPTION_ID }}

      # Get a token for the special audience used for token exchange.
      - name: Get UAMI token for AzureADTokenExchange
        id: mi
        run: |
          set -e
          # Acquire a token as the UAMI with audience api://AzureADTokenExchange
          MI_TOKEN=$(az account get-access-token \
            --resource api://AzureADTokenExchange \
            --query accessToken -o tsv)
          if [ -z "$MI_TOKEN" ]; then
            echo "Failed to get MI token"; exit 1
          fi
          echo "mi_token::${MI_TOKEN:0:20}..."  # short echo for logs
          echo "MI_TOKEN=$MI_TOKEN" >> $GITHUB_OUTPUT

      # ---- Hop 2: UAMI token -> App token (via federated cred on the App) ----
      - name: Exchange MI token for App token
        id: app
        shell: pwsh
        run: |
          $tenant   = "${{ env.TENANT_ID }}"
          $appId    = "${{ env.APP_CLIENT_ID }}"
          $miToken  = "${{ steps.mi.outputs.MI_TOKEN }}"
          $scope    = "${{ env.GRAPH_SCOPE }}"
          $tokenUrl = "https://login.microsoftonline.com/$tenant/oauth2/v2.0/token"
